@model IdentityDemo.ViewModels.ItemsViewModel
@{
    Layout = "_Zone_layout";
}

@section Shopidcss {
    
    <link href="~/css/custom_css/oneshoponeitem.css" rel="stylesheet"/>
    <!-- Bootstrap CSS -->
    
}

<section class="py-3">
    <marquee behavior="scroll" direction="right" scrollamount="3">
        <button class="btn-outline-secondary buttonshop">
            <div class="justify-content-center">
                <h3>@Model.Shop.ShopName</h3>
            </div>
        </button>
    </marquee>
    <div class="main-container">
        <div class="container1">
            <div class="row justify-content-left formargin">
                @foreach (var item in Model.Items)
                {
                    <div class="col-lg-6 col-md-12 d-flex justify-content-center">
                        <div class="card card-custom" data-id="@item.ItemId">
                            <img src="~/img/product1.jpg" class="card-img-top" alt="Product 1">
                            <div class="card-body">
                                <div class="d-flex justify-content-between">
                                    <h5 class="card-title">@item.ItemName</h5>
                                    <p class="card-text" style="padding-right: 23px;">@item.ItemChangedPrice</p>
                                </div>
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="d-flex justify-content-between align-items-center">
                                        Amount: <span class="px-2 count" id="supercount">1</span>
                                    </div>
                                    <a href="#" class="btn btn-primary btn-sm add-to-cart-btn" data-id="@item.ItemId" style="margin-right: 15px;">Add cart</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <!-- Your existing HTML code -->
        <div class="container2 sticky d-flex flex-column justify-content-between">
            <div id="item-names" class="text-center">
                <br />
                <!-- Item names with quantities will be displayed here -->
            </div>
            <div class="text-center mx-auto">
                <button class="btn btn-primary mb-3 buttonsize" id="submittocart">Purchase</button>
            </div>
        </div>
    </div>
</section>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        var selectedItems = {}; // Object to store item quantities in the cart
        var submitButton = $('#submittocart');
        if (Object.keys(selectedItems.length > 0) {
            submitButton.removeAttr('disabled');
        } else {
            submitButton.attr('disabled', 'disabled');
        }
        // Function to increment quantity
        $(document).on('click', '.increment-btn', function () {
            var itemId = $(this).closest('.purchaseitem').data('id');
            selectedItems[itemId]++;
            updateCartDisplay();
        });

        // Function to decrement quantity
        $(document).on('click', '.decrement-btn', function () {
            var itemId = $(this).closest('.purchaseitem').data('id');
            if (selectedItems[itemId] > 1) {
                selectedItems[itemId]--;
            } else {
                delete selectedItems[itemId];
            }
            updateCartDisplay();
        });

        // Function to add item to cart
        $(document).on('click', '.add-to-cart-btn', function (e) {
            e.preventDefault();
            var itemId = $(this).data('id');
            if (selectedItems[itemId]) {
                selectedItems[itemId]++;
            } else {
                selectedItems[itemId] = 1;
            }
            updateCartDisplay();
        });

        // Function to delete item from cart
        $(document).on('click', '.delete-item-btn', function () {
            var itemId = $(this).closest('.purchaseitem').data('id');
            delete selectedItems[itemId];
            updateCartDisplay();
        });

        // Function to update cart display
        function updateCartDisplay() {
            var itemNamesDiv = $('#item-names');
            itemNamesDiv.empty(); // Clear previous content

            // Update display for each item in selectedItems
            Object.keys(selectedItems).forEach(function (itemId) {
                var itemName = getItemNameById(itemId); // Replace with actual function to get item name
                var itemQuantity = selectedItems[itemId];

                // Create elements for item display
                var itemDiv = $('<div></div>').addClass('d-flex justify-content-between align-items-center mb-2 purchaseitem').attr('data-id', itemId);

                // Left container for item name
                var nameContainer = $('<div></div>').addClass('marginname').text(itemName);

                // Right container for buttons
                var buttonContainer = $('<div></div>').addClass('d-flex align-items-center marginname2');

                // Decrement button in cart
                var decrementButtonCart = $('<button>-</button>').addClass('btn btn-primary btn-sm custom-btn mx-1 decrement-btn');

                // Quantity display in cart
                var quantityDisplayCart = $('<span></span>').addClass('px-2 count').text(itemQuantity);

                // Increment button in cart
                var incrementButtonCart = $('<button>+</button>').addClass('btn btn-primary btn-sm custom-btn mx-1 increment-btn');

                // Delete button in cart
                var deleteButtonCart = $('<button><i class="fas fa-trash-alt"></i></button>').addClass('btn btn-danger btn-sm ml-1 delete-item-btn');

                // Append buttons to button container
                buttonContainer.append(decrementButtonCart, quantityDisplayCart, incrementButtonCart, deleteButtonCart);

                // Append name container and button container to item div
                itemDiv.append(nameContainer, buttonContainer);

                // Append item div to itemNamesDiv
                itemNamesDiv.append(itemDiv);
            });
            
        }

        // Placeholder function to get item name by ID (replace with actual function)
        function getItemNameById(itemId) {
            // Example: You might fetch item details from a database or use predefined data
            // For demonstration, return a mock item name
            return "Item " + itemId;
        }

        // Click event handler for the Purchase button
        $('#submittocart').click(function () {

            // Prepare data for submission
            var form = $('<form action="/Order/Invoice" method="post"></form>');

            // Add each item as a hidden input in the form
            $.each(selectedItems, function (itemId, quantity) {
                form.append('<input type="hidden" name="selectedItems[' + itemId + ']" value="' + quantity + '">');
            });

            // Append form to body and submit
            $('body').append(form);
            form.submit();
        });
    });

</script>
